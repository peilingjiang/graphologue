.interchange-item {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: $padding-mid;

  margin: 0;
  // margin: 0 auto $padding-xx-large auto;
  // max-width: 2200px;

  box-sizing: border-box;
  * {
    box-sizing: inherit;
  }

  &:first-child {
    margin-top: auto;
  }

  &:last-child {
    margin-bottom: auto;
  }

  .interchange-component {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: center;
    gap: $padding-small;
    flex-shrink: 0;

    padding: $padding-small;
    border-radius: $radius-default;
    background-color: $white;
    box-shadow: $shadow-grey-default;

    .question-textarea {
      padding: $padding-mid;
      width: 30rem;

      resize: none;
      outline: none;
      border: none;
      border-radius: $radius-small;
      box-sizing: border-box;

      font-size: $font-size-large;
      line-height: 130%;
      font-family: inherit;
      font-weight: 400;
      color: $black;
      // word-break: break-all;

      background: #fefefe;
      box-shadow:
        rgb(204, 219, 232, 0.9) 0 rem-to-px(2rem) rem-to-px(7rem) 0 inset,
        rgba(255, 255, 255, 0.7) 0 rem-to-px(-4rem) rem-to-px(6rem)
          rem-to-px(2rem) inset;
    }

    .error-message {
      padding: $padding-small;
      border-radius: $padding-x-large;
      user-select: none;

      background: $error-red-x-light;
      box-shadow: $error-red 0 0 0 rem-to-px(1rem);

      color: $error-red;
      font-size: $font-size-small;
    }
  }

  .question-item {
    @include bar-button;

    transform: scale(1.75);

    transition: transform $transition-normal-slow ease;

    .bar-button {
      padding: $padding-small;

      * {
        font-size: $font-size-large;
      }
    }

    .new-question-hint {
      display: inline-flex;
      align-items: center;
      gap: $padding-small;

      font-size: $font-size-default;
      color: $dark-grey;
      padding: $padding-small $padding-large;

      user-select: none;
      cursor: pointer;

      svg {
        font-size: $font-size-large;
      }
    }

    &:has(.new-question-hint) {
      &:hover {
        transform: scale(1.1);
      }
    }
  }
}

.openai-api-key-textarea {
  transition:
    color $transition-normal ease,
    text-shadow $transition-normal ease;

  &::placeholder {
    color: $dark-mid-grey;
  }
}

.public-information {
  display: flex;
  gap: $padding-xx-large;
  user-select: none;

  a {
    font-size: $font-size-large;
    text-decoration: none;

    &:link {
      color: $grey;
    }

    &:visited {
      color: $grey;
    }

    &:hover {
      color: $dark-mid-grey;
    }

    &:active {
      color: $dark-grey;
    }
  }
}
